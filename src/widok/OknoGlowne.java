/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package widok;

import dane.JednostkaOrganizacyjna;
import dane.Pobyt;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableRowSorter;
import dane.zrodlaDanych.JednostkaOrganizacyjnaZrodlo;
import dane.zrodlaDanych.PobytZrodlo;
import java.sql.SQLException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author brybarczyk
 */
public class OknoGlowne extends javax.swing.JFrame {

    private JednostkaOrganizacyjnaZrodlo joZrodlo;
    private PobytZrodlo pbZrodlo;

    private ModelTabeliPobyt mtP;
    RowFilter rf = null;
    TableRowSorter<ModelTabeliPobyt> ctr;

    /**
     * Creates new form OknoGlowne
     */
    public OknoGlowne() {
        initComponents();
        bEdytuj.setEnabled(false);

        ctr = new TableRowSorter<ModelTabeliPobyt>(mtP);

        joZrodlo = new JednostkaOrganizacyjnaZrodlo();
        ArrayList<JednostkaOrganizacyjna> listaOddzial;
        try {
            listaOddzial = joZrodlo.pobierzJednostki();
            wczytajListeOddzialow(listaOddzial);
        } catch (SQLException ex) {
            Logger.getLogger(OknoGlowne.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setTitle("Okno Główne");
        this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        bPobierz = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cbJednostkaOrganizacyjna = new javax.swing.JComboBox<>();
        tfFiltr = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        bEdytuj = new javax.swing.JButton();

        org.jdesktop.layout.GroupLayout jFrame1Layout = new org.jdesktop.layout.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout jFrame2Layout = new org.jdesktop.layout.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bPobierz.setText("Pobierz");
        bPobierz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPobierzActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        cbJednostkaOrganizacyjna.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbJednostkaOrganizacyjnaItemStateChanged(evt);
            }
        });

        tfFiltr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfFiltrKeyReleased(evt);
            }
        });

        jLabel1.setText("Filtrowanie:");

        bEdytuj.setText("Edytuj");
        bEdytuj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEdytujActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .add(18, 18, 18)
                        .add(tfFiltr)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cbJednostkaOrganizacyjna, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 300, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(12, 12, 12)
                        .add(bEdytuj, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(bPobierz, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(tfFiltr, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cbJednostkaOrganizacyjna, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(bPobierz)
                    .add(bEdytuj))
                .add(19, 19, 19)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .add(52, 52, 52))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bPobierzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPobierzActionPerformed
        ArrayList<Pobyt> listaPobytow = null;
        pbZrodlo = new PobytZrodlo();

        try {
            listaPobytow = pbZrodlo.pobierzListePobytowBD(((JednostkaOrganizacyjna) cbJednostkaOrganizacyjna.getSelectedItem()).getId(), tfFiltr.getText());
        } catch (SQLException ex) {
            Logger.getLogger(OknoGlowne.class.getName()).log(Level.SEVERE, null, ex);
        }

        wyswietlListePobytow(listaPobytow);
    }//GEN-LAST:event_bPobierzActionPerformed

    private void cbJednostkaOrganizacyjnaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbJednostkaOrganizacyjnaItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED && ctr != null && cbJednostkaOrganizacyjna.getSelectedItem() != null) {  //sprawdzenie czy wybrany item nie jest null
            filtry();
        }
    }//GEN-LAST:event_cbJednostkaOrganizacyjnaItemStateChanged

    private void tfFiltrKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfFiltrKeyReleased
        filtry();
    }//GEN-LAST:event_tfFiltrKeyReleased

    private void bEdytujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEdytujActionPerformed
        Pobyt pb = mtP.pobierzPobyt(jTable1.convertRowIndexToModel(jTable1.getSelectedRow()));    //convertRowIndexToModel() - odświerzanie modelu tabeli
        try {
            new OknoEdycji(pb);

        } catch (SQLException ex) {
            Logger.getLogger(OknoGlowne.class.getName()).log(Level.SEVERE, null, ex);
        }

        
    }//GEN-LAST:event_bEdytujActionPerformed

    private void wczytajListeOddzialow(ArrayList<JednostkaOrganizacyjna> listaOddzialow) {
        cbJednostkaOrganizacyjna.addItem(new JednostkaOrganizacyjna(0, ""));
        for (JednostkaOrganizacyjna jo : listaOddzialow) {
            cbJednostkaOrganizacyjna.addItem(jo);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OknoGlowne().setVisible(true);
            }
        });

    }

    public void wyswietlListePobytow(ArrayList<Pobyt> listaPb) {

        mtP = new ModelTabeliPobyt(listaPb);
        jTable1.setModel(mtP);
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {

                if (jTable1.getSelectedRow() >= 0) {
                    bEdytuj.setEnabled(true);
                } else {
                    bEdytuj.setEnabled(false);
                }
            }
        });

    }

    public void filtry() {
        ctr = new TableRowSorter<ModelTabeliPobyt>(mtP);
        jTable1.setRowSorter(ctr);

        List<RowFilter<Object, Object>> filters = new ArrayList<RowFilter<Object, Object>>(2);
        filters.add(RowFilter.regexFilter(cbJednostkaOrganizacyjna.getSelectedItem() != null ? cbJednostkaOrganizacyjna.getSelectedItem().toString() : ""));
        try (Scanner s = new Scanner(tfFiltr.getText())) {
            while (s.hasNext()) {
                filters.add(RowFilter.regexFilter("(?i)" + (tfFiltr.getText() != null ? s.next() : "")));           // "(?i)" - filtruje tekst bez wzgledu na wielkosc znakow
                RowFilter<Object, Object> rf = RowFilter.andFilter(filters);
                ctr.setRowFilter(rf);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bEdytuj;
    private javax.swing.JButton bPobierz;
    private javax.swing.JComboBox<JednostkaOrganizacyjna> cbJednostkaOrganizacyjna;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField tfFiltr;
    // End of variables declaration//GEN-END:variables

}
